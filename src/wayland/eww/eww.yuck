(defwidget greeter [?text name]
	(box :orientation "horizontal" :halign "center"
		text
		(button :onclick "notify-send 'Hello' 'Hello, ${name}'" "Greet")
	)
)

;; (defpoll time :interval "1s" :initial "initial-value" `date +%H:%M:%S`)

(defwidget bar_left [] (workspaces))
(defwidget bar_center [] (music))
(defwidget bar_right [] (sidestuff))

(defwidget bar_h []
	(centerbox :orientation "h"
		(box :halign "start" (bar_left))
		(box :halign "center" (bar_center))
		(box :halign "end" (bar_right))
	)
)

(defwindow main
	:monitor 0
	:geometry (geometry :x "0px"
		:y "0px"
		:width "100%"
		:height "16px"
		:anchor "top center")
	:stacking "bottom"
	:exclusive true
	:focusable false
	(bar_h)
)

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
    (metric :label "ðŸ”Š"
            :value volume
	    :min 0.0
	    :max 1.0)
    (metric :label "RAM"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label "ðŸ’¾"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")
    time))

(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (button :onclick "wmctrl -s 0" 1)
    (button :onclick "wmctrl -s 1" 2)
    (button :onclick "wmctrl -s 2" 3)
    (button :onclick "wmctrl -s 3" 4)
    (button :onclick "wmctrl -s 4" 5)
    (button :onclick "wmctrl -s 5" 6)
    (button :onclick "wmctrl -s 6" 7)
    (button :onclick "wmctrl -s 7" 8)
    (button :onclick "wmctrl -s 8" 9)))

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "ðŸŽµ${music}" : ""}))


(defwidget metric [label value ?onchange ?min ?max]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min {min ?: 0}
           :max {max ?: 100}
           :active {onchange != ""}
           :value value
           :onchange onchange)))



(deflisten music :initial "" "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

(defpoll volume :initial 0.0 :interval "1s" "scripts/get-volume")

(defpoll time :interval "10s"
  "date '+%H:%M %Y-%m-%d'")
